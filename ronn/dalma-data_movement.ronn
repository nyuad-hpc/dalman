Data Transfer From / To Dalma
====

## SYNOPSIS  

For replicating datasets between the HPC clusters and your workstation, or between two filesystems on an HPC cluster, rsync offers powerful functionality beyond that of cp or scp. With rsync you can copy directories between your workstation and the HPC clusters - or between different filesystems - in such a way that permission and file modification timestamps are preserved, and that only files which have changed are transferred.

## DESCRIPTION
Depending on what operation system you use, we recommend the following 2 ways to transfer data from / to Dalma.

* Filezilla: This is an easy to use, open-source SFTP client with a nice GUI, available under Windows, Mac and Linux.
* rsync: This is probably the most common command for synchronizing data between file systems, available under Mac and Linux.

If you have trouble understanding the text above, we kindly suggest you have a look at the links below for the basic understanding of SFTP, SSH and etc.

https://www.digitalocean.com/community/tutorials/how-to-use-sftp-to-securely-transfer-files-with-a-remote-server

### Windows / Mac / Linux : Filezilla

Please follow the following link with detailed instructions and screenshots, if you want to use Filezilla to transfer data.

[https://wikis.nyu.edu/display/ADRC/File+Transfer+using+FileZilla](https://wikis.nyu.edu/display/ADRC/File+Transfer+using+FileZilla)


### Mac / Linux : rysnc

This is probably the most common command for synchronizing data between file systems, available under Mac and Linux. Follow the instructions below to use `rysnc`.

#### Basic Usage of rsync

`rsync [options] source [source] destination`

Where source is a list of one or more source files or directories to copy and destination is a directory into which to copy source. Commonly useful options are:

* a "Archive" mode - permissions and timestamps of the source are replicated at the destination.
* v "Verbose".
* n  "dry run" - don't actually do anything, just indicate what would be done.
* C "follow CVS ignore conventions" 

### Before Actually Copying Files

Whether rsync treats destination as a new name for the copy of source, a parent directory into which to copy source, or a parent directory into which to place the contents of source, depends on the exact context of the command. For this reason, it is highly advisable to first run rsync with -n and -v to see exactly what rsync will do before issuing the "real" command. For example,

\----------------------------------------------------------

  $ rsync -nav source destination

  $ rsync -av source destination

\----------------------------------------------------------

For detailed information about rsync type "man rsync" at the command line.

## EXAMPLE

### To replicate in your $SCRATCH area a directory tree you have saved in $HOME

\----------------------------------------------------------

```
$ cd $HOME
$ ls -F
my_input_data/
$ rsync -nav my_input_data $SCRATCH/my_run_dir
building file list ... done
my_input_data/file1
my_input_data/file2
 
$ rsync -av my_input_data $SCRATCH/my_run_dir
building file list ... done
my_input_data/file1
my_input_data/file2
 
$ ls -F $SCRATCH/my_run_dir
my_input_data/
```

\----------------------------------------------------------

There is now a copy of my_input_data directory under $SCRATCH/my_run_dir.  

### If you append / to source, rsync will copy the contents of source rather than the source directory itself

\----------------------------------------------------------

```
$ cd $HOME/
$ ls -F
my_input_data/
$ rsync -nav my_input_data/ $SCRATCH/my_run_dir
building file list ... done
file1
file2
 
$ rsync -av my_input_data/ $SCRATCH/my_run_dir
building file list ... done
file1
file2
 
$ ls -F $SCRATCH/my_run_dir
file1
file2
```

\----------------------------------------------------------

### To replicate on Dalma a data directory you have on your workstation 

Assuming you are entering these commands on a local terminal on your workstation, and you have an SSH Tunnel set up and running, run the following with <NetID> replaced with your real NetID
 
\----------------------------------------------------------

```
$ hostname
my_workstation
$ ls -F
my_input_data/
$ rsync -av my_input_data <NetID>@dalma.abudhabi.nyu.edu:/scratch/<NetID>/my_run_dir
```

\----------------------------------------------------------

To copy in the other direction, from $SCRATCH on Dalma to your workstation (again, from a local terminal on your workstation and across an SSH Tunnel):

\----------------------------------------------------------

```
$ hostname
my_workstation
$ rsync -av <NetID>@dalma.abudhabi.nyu.edu:/scratch/<NetID>/my_run_dir my_results
$ ls my_results
```

\----------------------------------------------------------

Only those files not already up-to-date on your workstation will be copied.

### Ignoring certain files

The -C option tells rsync to follow CVS conventions about ignoring certain files. For example, when copying a tree of source code, you probably want the .c, .f and .h files but not the .o files. The conventions are described fully in the man page (man rsync). In summary, when -C is used the following files are ignored:

* Any file or directory whose name matches any of: `RCS SCCS CVS CVS.adm RCSLOG cvslog.* tags TAGS .make.state .nse_depinfo *~ #* .#* ,* _$* *$ *.old *.bak *.BAK *.orig *.rej .del-* *.a *.olb *.o *.obj *.so *.exe *.Z *.elc *.ln core .svn/`
* Any file whose name matches a pattern listed in the environment variable CVSIGNORE. This environment variable takes a list of patterns separated by spaces, such as the default list above. When defining CVSIGNORE you will need to enclose the definition in quotation marks, for example to skip Fortran output to unnamed unit numbers (whose files have names like fort.99) and netcdf files whose name ends in "intermediate.nc", set CVSIGNORE as follows (note that this syntax is for BASH): `$ export CVSIGNORE="fort.?? *.intermediate.nc"`
* Any file whose name matches a pattern listed in the file $HOME/.cvsignore, or in a file named .cvsignore within a directory being copied. This file has contents as per $CVSIGNORE, but with one pattern per line, for example: 
`in .cvsignore: fort.??; *.intermediate.nc`

## AUTHORS 
    NYUAD HPC Apps Team:
    --------------------
        - Benoit Marchand
        - Guowei He
        - Jorge Naranjo

## SEE ALSO

Please refer to the online documentation available [here](https://nyuad-hpc.github.io/dalman/html/dalma.html)

